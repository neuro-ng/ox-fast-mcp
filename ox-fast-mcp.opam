opam-version: "2.0"
name: "ox-fast-mcp"
version: "0.1.0"
maintainer: "Norwen Gonio <neu.gonio@gmail.com>"
authors: ["Norwen Gonio"]
license: "Apache-2.0"
homepage: "https://github.com/neuro-ng/ox-fast-mcp"
doc: "https://github.com/neuro-ng/ox-fast-mcp"
bug-reports: "https://github.com/neuro-ng/ox-fast-mcp/issues"
dev-repo: "git+https://github.com/neuro-ng/ox-fast-mcp.git"

depends: [
  "ocaml" {>= "4.14.0"}
  "dune" {>= "3.0" & >= "3.0"}
  "core" {>= "v0.16.0"}
  "core_unix" {>= "v0.16.0"}
  "async" {>= "v0.16.0"}
  "async_log" {>= "v0.18~preview.130.36+326"}
  "base" {>= "v0.18~preview.130.36+326"}
  "cohttp-lwt-unix" {>= "4.0.0"}
  "logs" {>= "0.8.0"}
  "lwt" {>= "5.9.1"}
  "magic-mime" {>= "1.3.1"}
  "ppx_jane" {>= "v0.16.0"}
  "ppx_compare" {>= "v0.18~preview.130.36+326"}
  "ppx_sexp_conv" {>= "v0.18~preview.130.36+326"}
  "ppx_sexp_message" {>= "v0.18~preview.130.36+326"}
  "ppx_yojson_conv" {>= "v0.16.0"}
  "ppx_yojson_conv_lib" {>= "v0.16.0"}
  "yojson" {>= "2.1.0"}
  "base64" {>= "3.5.0"}
  "expect_test_helpers_core" {with-test}
  "ppx_expect" {with-test}
  "odoc" {with-doc}
  "uri" {>= "4.4.0"}
  "stdio" {with-test & >= "v0.18~preview.130.36+326"}
]
build: [
  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
synopsis: "Fast, functional way to build MCP servers and clients in OCaml"

description: """
An OCaml implementation of FastMCP inspired by the Python library, providing 
a high-level, type-safe interface for building Model Context Protocol (MCP) 
servers and clients using functional programming principles.

Features:
- Fast: High-level interface with minimal boilerplate
- Type-Safe: Leverages OCaml's strong type system  
- Functional: Built with functional programming principles
- TDD: Developed using Test-Driven Development
- Complete: Full MCP protocol implementation for servers and clients
- Interoperable: Compatible with other MCP implementations
""" 
