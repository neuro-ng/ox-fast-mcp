name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6 AM UTC

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/neuro-ng/oxcaml-ubuntu:20250628
      options: --user ocaml-user --workdir /workspace
    env:
      USER: ocaml-user
      HOME: /home/ocaml-user
      SHELL: /bin/bash
      PATH: /home/ocaml-user/.opam/5.2.0+ox/bin:/home/ocaml-user/.opam/5.2.0+ox/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
      OPAMROOT: /home/ocaml-user/.opam
      OPAMSWITCH: 5.2.0+ox
      OPAMYES: 1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set working directory
      run: |
        mkdir -p /workspace
        cp -r . /workspace/
        cd /workspace

    - name: Install opam-dune-lint
      working-directory: /workspace
      run: |
        eval $(opam env)
        opam install opam-dune-lint

    - name: Check for dependency issues
      working-directory: /workspace
      run: |
        eval $(opam env)
        opam-dune-lint

  code-quality:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/neuro-ng/oxcaml-ubuntu:sha-b9ad8cf
      options: --user ocaml-user --workdir /workspace
    env:
      USER: ocaml-user
      HOME: /home/ocaml-user
      SHELL: /bin/bash
      PATH: /home/ocaml-user/.opam/5.2.0+ox/bin:/home/ocaml-user/.opam/5.2.0+ox/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
      OPAMROOT: /home/ocaml-user/.opam
      OPAMSWITCH: 5.2.0+ox
      OPAMYES: 1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set working directory
      run: |
        mkdir -p /workspace
        cp -r . /workspace/
        cd /workspace

    - name: Check code formatting
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune build @fmt
        if ! dune build @fmt 2>/dev/null; then
          echo "Code formatting issues found. Run 'dune build @fmt --auto-promote' to fix."
          exit 1
        fi

    - name: Build with warnings as errors
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune build --profile dev 