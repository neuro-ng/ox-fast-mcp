name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/neuro-ng/oxcaml-ubuntu:20250628
      options: --user ocaml-user --workdir /workspace
    env:
      USER: ocaml-user
      HOME: /home/ocaml-user
      SHELL: /bin/bash
      PATH: /home/ocaml-user/.opam/5.2.0+ox/bin:/home/ocaml-user/.opam/5.2.0+ox/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
      OPAMROOT: /home/ocaml-user/.opam
      OPAMSWITCH: 5.2.0+ox
      OPAMYES: 1

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set working directory
      run: |
        mkdir -p /workspace
        cp -r . /workspace/
        cd /workspace

    - name: Build project
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune build

    - name: Run tests
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune runtest

    - name: Check opam file
      working-directory: /workspace
      run: |
        eval $(opam env)
        opam lint ox-fast-mcp.opam

  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/neuro-ng/oxcaml-ubuntu:20250628
      options: --user ocaml-user --workdir /workspace
    env:
      USER: ocaml-user
      HOME: /home/ocaml-user
      SHELL: /bin/bash
      PATH: /home/ocaml-user/.opam/5.2.0+ox/bin:/home/ocaml-user/.opam/5.2.0+ox/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
      OPAMROOT: /home/ocaml-user/.opam
      OPAMSWITCH: 5.2.0+ox
      OPAMYES: 1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set working directory
      run: |
        mkdir -p /workspace
        cp -r . /workspace/
        cd /workspace

    - name: Check code formatting
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune build @fmt

    - name: Lint opam file
      working-directory: /workspace
      run: |
        eval $(opam env)
        opam lint ox-fast-mcp.opam

  examples:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/neuro-ng/oxcaml-ubuntu:20250628
      options: --user ocaml-user --workdir /workspace
    env:
      USER: ocaml-user
      HOME: /home/ocaml-user
      SHELL: /bin/bash
      PATH: /home/ocaml-user/.opam/5.2.0+ox/bin:/home/ocaml-user/.opam/5.2.0+ox/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
      OPAMROOT: /home/ocaml-user/.opam
      OPAMSWITCH: 5.2.0+ox
      OPAMYES: 1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set working directory
      run: |
        mkdir -p /workspace
        cp -r . /workspace/
        cd /workspace

    - name: Build examples
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune build examples/

    - name: Test calculator server
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune exec examples/calculator_server.exe

    - name: Test demo
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune exec examples/demo.exe

  publish:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/neuro-ng/oxcaml-ubuntu:20250628
      options: --user ocaml-user --workdir /workspace
    env:
      USER: ocaml-user
      HOME: /home/ocaml-user
      SHELL: /bin/bash
      PATH: /home/ocaml-user/.opam/5.2.0+ox/bin:/home/ocaml-user/.opam/5.2.0+ox/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
      OPAMROOT: /home/ocaml-user/.opam
      OPAMSWITCH: 5.2.0+ox
      OPAMYES: 1
    needs: [build-and-test, lint, examples]
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set working directory
      run: |
        mkdir -p /workspace
        cp -r . /workspace/
        cd /workspace

    - name: Build for release
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune build

    - name: Generate release artifacts
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune build @install
        mkdir -p _release
        cp -r _build/install/default/* _release/

    - name: Upload release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ox-fast-mcp-${{ github.event.release.tag_name }}
        path: /workspace/_release/ 