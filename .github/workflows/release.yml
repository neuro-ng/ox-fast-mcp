name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          Release ${{ steps.get_version.outputs.VERSION }} of ox-fast-mcp
          
          ## Changes
          See [CHANGELOG.md](CHANGELOG.md) for details.
          
        draft: false
        prerelease: false

  build-release:
    needs: create-release
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/neuro-ng/oxcaml-ubuntu:sha-b9ad8cf
      options: --user ocaml-user --workdir /workspace
    env:
      USER: ocaml-user
      HOME: /home/ocaml-user
      SHELL: /bin/bash
      PATH: /home/ocaml-user/.opam/5.2.0+ox/bin:/home/ocaml-user/.opam/5.2.0+ox/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
      OPAMROOT: /home/ocaml-user/.opam
      OPAMSWITCH: 5.2.0+ox
      OPAMYES: 1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set working directory
      run: |
        mkdir -p /workspace
        cp -r . /workspace/
        cd /workspace

    - name: Build release
      working-directory: /workspace
      run: |
        eval $(opam env)
        dune build
        dune build @install

    - name: Create release archive
      working-directory: /workspace
      run: |
        mkdir -p release-ubuntu
        cp -r _build/install/default/* release-ubuntu/
        tar -czf ox-fast-mcp-ubuntu.tar.gz release-ubuntu/

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: /workspace/ox-fast-mcp-ubuntu.tar.gz
        asset_name: ox-fast-mcp-ubuntu.tar.gz
        asset_content_type: application/gzip 